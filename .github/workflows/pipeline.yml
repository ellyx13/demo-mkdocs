name: CI/CD MkDocs with Github Action

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  build:
    name: Build and push image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to build your code on the runner."
      - name: Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: Build the Docker Image
        run: docker build -t ${{vars.DOCKER_NAME_IMAGE}} .
      - name: push the Docker Image to Docker Hub
        run: docker push ${{vars.DOCKER_NAME_IMAGE}}
      - run: echo "üçè This job's status is ${{ job.status }}."

  deploy:
    name: Deploy Docker Image in server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull and run Docker Image in server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USERNAME}}
          password: ${{secrets.SSH_PASSWORD}}
          script: |
            cd ${{vars.PROJECT_PATH}}
            sudo docker pull ${{vars.DOCKER_NAME_IMAGE}}
            sudo docker stop ${{vars.DOCKER_NAME_IMAGE}} || true
            sudo docker rm ${{vars.DOCKER_NAME_IMAGE}} || true
            sudo docker run -d -p 8010:8000 ${{vars.DOCKER_NAME_IMAGE}}
